/*
CRIAR UMA API PARA ALUGUEL DE CARROS.
1° CRIAR A PASTA MODELS, CRIAR A CLASSE Carro DENTRO DE MODELS.
2° CRIAR UM OBJETO WEB API CONTROLLER VAZIO NA PASTA CONTROLLERS CHAMADO CarroController


//MODEL

namespace AluguelDeCarros.Models
{
    public class Carro
    {
        public int Id { get; set; }
        public string Marca { get; set; } = string.Empty;
        public string Modelo { get; set; } = string.Empty;
        public int Ano { get; set; }
        public string Cor { get; set; } = string.Empty;
        public bool Alugado { get; set; } = false;
    }
}

//CONTROLLER

using AluguelDeCarros.Models;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;


namespace AluguelDeCarros.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class CarrosController : ControllerBase
    {
        private static List<Carro> carros = new List<Carro>
        {
            
        };

        [HttpPost]
        public ActionResult<List<Carro>>

            AddCarro(Carro novo)
        {
            if (novo.Id == 0 && carros.Count > 0)
                novo.Id = carros[carros.Count - 1].Id + 1;

            carros.Add(novo);
            return Ok(carros);
        }

        [HttpGet]
        public ActionResult<List<Carro>> LerTodosCarros()
        {
            return Ok(carros);
        }

        [HttpPut("{id}")]
        public ActionResult<List<Carro>> AlugarCarro(int id, Carro editar)
        { 
            var pesquisa = carros.Find(x => x.Id == id);

            if (pesquisa == null)
                return NotFound("Carro não encontrado.");
            
            pesquisa.Marca = editar.Marca == "" || editar.Marca == "string" ? pesquisa.Marca : editar.Marca;
            pesquisa.Modelo = editar.Modelo == "" || editar.Modelo == "string" ? pesquisa.Modelo : editar.Modelo;
            pesquisa.Ano = editar.Ano == 0 ?  pesquisa.Ano : editar.Ano;
            pesquisa.Cor = editar.Cor == "" || editar.Cor =="string" ? pesquisa.Cor : editar.Cor;
            pesquisa.Alugado = editar.Alugado;

            return Ok(pesquisa);
        }

        [HttpGet("{id}")]
        public ActionResult ConsultaCarro(int id)
        {
            var pesquisa = carros.Find(x => x.Id == id);

            if (pesquisa == null)
                return NotFound("Carro não encontrado.");

            if (pesquisa.Alugado == true)
                return Ok("Carro Alugado!");

            return Ok("Carro Disponível!");
        }

        [HttpGet("id/{id}")]
        public ActionResult DevolucaoCarro(int id)
        {
            var pesquisa = carros.Find(x => x.Id == id);

            if (pesquisa == null)
                return NotFound("Carro não encontrado.");

            if (pesquisa.Alugado == true)
            {
                pesquisa.Alugado = false; 
                return Ok("Carro Devolvido com Sucesso!");
            }

            return Ok("Carro não estava locado!");
        }
    }
}
